package tests;

import static org.junit.Assert.*;

import java.io.ByteArrayInputStream;
import java.util.NoSuchElementException;
import org.junit.Test;

import main.*;

public class CreateTests {

	@Test public void player1Create() {
		String input = "create e 0\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		boolean removedP1 = true;
		boolean addedP1 = false;
		boolean removedP2 = true;
		boolean addedP2 = false;
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			for (int i = 0; i < attempt.Player1.available.size(); i++) {
				if (attempt.Player1.available.get(i).getName().equals("e")) {removedP1 = false;}
			}
			for (int i = 0; i < attempt.Player1.board.size(); i++) {
				if (attempt.Player1.board.get(i).getName().equals("e")) {addedP1 = true;}
			}
			for (int i = 0; i < attempt.Player2.available.size(); i++) {
				if (attempt.Player2.available.get(i).getName().equals("E")) {removedP2 = false;}
			}
			for (int i = 0; i < attempt.Player2.board.size(); i++) {
				if (attempt.Player2.board.get(i).getName().equals("E")) {addedP2 = true;}
			}
			assertFalse(removedP2);
			assertFalse(addedP2);
			assertTrue(removedP1);
			assertTrue(addedP1);
			assertEquals(attempt.board.toString(), expected);			
		}
		
	}
	
	@Test public void player2Create() {
		String input = "pass\n" +
					   "pass\n" +
					   "create j 0\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |  |  |     |     |\n" +
				"|     |     |     |     |     |     |     | #J# |     |     |\n" +
				"|     |     |     |     |     |     |     |  |  |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		boolean removedP1 = true;
		boolean addedP1 = false;
		boolean removedP2 = true;
		boolean addedP2 = false;
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			for (int i = 0; i < attempt.Player1.available.size(); i++) {
				if (attempt.Player1.available.get(i).getName().equals("j")) {removedP1 = false;}
			}
			for (int i = 0; i < attempt.Player1.board.size(); i++) {
				if (attempt.Player1.board.get(i).getName().equals("j")) {addedP1 = true;}
			}
			for (int i = 0; i < attempt.Player2.available.size(); i++) {
				if (attempt.Player2.available.get(i).getName().equals("J")) {removedP2 = false;}
			}
			for (int i = 0; i < attempt.Player2.board.size(); i++) {
				if (attempt.Player2.board.get(i).getName().equals("J")) {addedP2 = true;}
			}
			assertFalse(removedP1);
			assertFalse(addedP1);
			assertTrue(removedP2);
			assertTrue(addedP2);
			assertEquals(attempt.board.toString(), expected);			
		}
	}
	
	@Test public void rotation90Create() {
		String input = "create e 90\n"+
				   	   "pass\n"+
				   	   "create i 90";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |  I  |     |     |\n" +
				"|     |     |     |     |     |     |     |  #  |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			assertEquals(attempt.board.toString(), expected);			
		}
	}
	
	@Test public void rotation180Create() {
		String input = "create e 90\n"+
			   	   	   "pass\n"+
			   	   	   "create i 180";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     | #I  |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			assertEquals(attempt.board.toString(), expected);			
		}
	}
	
	@Test public void rotation270Create() {
		String input = "create e 90\n"+
			   	   	   "pass\n"+
			   	   	   "create i 270";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |  #  |     |     |\n" +
				"|     |     |     |     |     |     |     |  I  |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			assertEquals(attempt.board.toString(), expected);			
		}
	}
	
	@Test public void creationSpotTakenCreate() {
		String input = "create e 0\n"+
					   "pass\n"+
					   "pass\n"+
					   "pass\n"+
					   "create h 90";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		boolean removedJ = true;
		boolean addedJ = false;
		boolean removedH = true;
		boolean addedH = false;
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			for (int i = 0; i < attempt.Player1.available.size(); i++) {
				if (attempt.Player1.available.get(i).getName().equals("e")) {removedJ = false;}
			}
			for (int i = 0; i < attempt.Player1.board.size(); i++) {
				if (attempt.Player1.board.get(i).getName().equals("e")) {addedJ = true;}
			}
			for (int i = 0; i < attempt.Player1.available.size(); i++) {
				if (attempt.Player1.available.get(i).getName().equals("h")) {removedH = false;}
			}
			for (int i = 0; i < attempt.Player1.board.size(); i++) {
				if (attempt.Player1.board.get(i).getName().equals("h")) {addedH = true;}
			}
			assertFalse(removedH);
			assertFalse(addedH);
			assertTrue(removedJ);
			assertTrue(addedJ);
			assertEquals(attempt.board.toString(), expected);			
		}
		
	}
	
	@Test public void invalidStartingCreate() {
		String input = "create h 0\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		boolean addedh = false;
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			for (int i = 0; i < attempt.Player1.board.size(); i++) {
				if (attempt.Player1.board.get(i).getName().equals("h")) {addedh = true;}
			}
			assertFalse(addedh);
			assertEquals(attempt.board.toString(), expected);			
		}
		
	}
	
	@Test public void invalidPieceCreate() {
		String input = "create z 0\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		boolean addedz = false;
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			for (int i = 0; i < attempt.Player1.board.size(); i++) {
				if (attempt.Player1.board.get(i).getName().equals("z")) {addedz = true;}
			}
			assertFalse(addedz);
			assertEquals(attempt.board.toString(), expected);			
		}
		
	}
	
	@Test public void invalidRotationCreate() {
		String input = "create e 81\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		boolean addede = false;
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			for (int i = 0; i < attempt.Player1.board.size(); i++) {
				if (attempt.Player1.board.get(i).getName().equals("z")) {addede = true;}
			}
			assertFalse(addede);
			assertEquals(attempt.board.toString(), expected);			
		}
		
	}

}
