package tests;

import static org.junit.Assert.assertEquals;

import java.io.ByteArrayInputStream;
import java.util.NoSuchElementException;

import org.junit.Test;

import main.Main;

public class UndoTests {
	
	@Test public void createUndo() {
		String input = "create e 0\n"+
				   	   "pass\n"+
				   	   "create i 0\n"+
				   	   "undo\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			assertEquals(attempt.board.toString(), expected);			
		}
	}
	
	@Test public void moveUndo() {
		String input = "create e 0\n"+
					   "move e right"+
				   	   "undo\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			assertEquals(attempt.board.toString(), expected);			
		}
	}
	
	@Test public void inReactionUndo() {
		String input = "create e 0\n"+
				   	   "move e up\n"+
				   	   "pass\n"+
				   	   "pass\n"+
				   	   "pass\n"+
				   	   "create g 0\n"+
				   	   "undo\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |  e  |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {
			assertEquals(attempt.board.toString(), expected);			
		}
	}

}
