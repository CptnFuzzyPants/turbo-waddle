package tests;

import static org.junit.Assert.*;

import java.io.ByteArrayInputStream;
import java.util.NoSuchElementException;
import org.junit.Test;

import main.*;

public class MoveTests {

	@Test public void upMove() {
		String input = "create e 0\n"+
					   "move e up";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |  e  |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}		
	}
	
	@Test public void leftMove() {
		String input = "create e 0\n"+
					   "move e left";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |  e  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}	
	}
	
	@Test public void rightMove() {
		String input = "create e 0\n"+
					   "move e right";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |  e  |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}
	}
	
	@Test public void downMove() {
		String input = "create e 0\n"+
					   "move e down";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}	
	}
	
	@Test public void intoFaceMove() {
		String input = "create e 0\n"+
					   "move e up\n"+
					   "pass\n"+
					   "pass\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e left";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}	
	}
	
	@Test public void PushingMove() {
		String input = "create e 0\n"+
					   "move e up\n"+
					   "pass\n"+
					   "pass\n"+
					   "pass\n"+
					   "create c 0\n"+
					   "move c up";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |  e  |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |  #  |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  | #c# |     |     |     |     |     |     |     |\n" +
				"|  X  |     |  #  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}	
	}
	
	@Test public void offBoardMove() {
		String input = "create e 0\n"+
					   "move e up\n"+
					   "pass\n"+
					   "pass\n"+
					   "pass\n"+
					   "create c 0\n"+
					   "move c up\n"+
					   "move e up";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |  #  |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  | #c# |     |     |     |     |     |     |     |\n" +
				"|  X  |     |  #  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}	
	}
	
	@Test public void behindFaceMove() {
		String input = "create e 0\n"+
					   "move e up\n"+
					   "pass\n"+
					   "pass\n"+
					   "pass\n"+
					   "create c 0\n"+
					   "move c up\n"+
					   "move e left";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |  #  |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  | #c# |     |     |     |     |     |     |     |\n" +
				"|  X  |     |  #  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}	
	}
	
	@Test public void pushingOtherTeamMove() {
		String input = "create e 0\n"+
					   "move e down\n"+
					   "pass\n"+
					   "create e 0\n"+
					   "move e up\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e down\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e up\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e down\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e left\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e right\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e left\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e right\n"+
					   "pass\n"+
					   "pass\n"+
					   "move e left\n";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |  e  |  E  |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}	
	}
	
	@Test public void invalidDirectionMove() {
		String input = "create e 0\n"+
					   "move e ldft";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}		
	}
	
	@Test public void invalidPieceMove() {
		String input = "create e 0\n"+
					   "move g left";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}		
	}
	
	@Test public void samePieceMove() { //Moving a piece that both players have on the board only moves the piece belonging to the player issuing the move command
		String input = "create e 0\n"+
					   "pass\n"+
					   "create e 0\n"+
					   "move e up";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |  E  |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}		
	}
	
	@Test public void otherPlayerMove() { //Can't move a piece that doesn't belong to you
		String input = "create e 0\n"+
					   "pass\n"+
					   "create c 0\n"+
					   "move j up";
		String expected ="-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"| XXX | XXX |     |     |     |     |     |     |     |     |\n" +
				"|  X  |  X  |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"| XXX |  1  |     |     |     |     |     |     |     |     |\n" +
				"|  X  |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |  e  |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |  #  |     |     |\n" +
				"|     |     |     |     |     |     |     | #C# |     |     |\n" +
				"|     |     |     |     |     |     |     |  #  |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |  0  | xxx |\n" +
				"|     |     |     |     |     |     |     |     |     |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     | xxx | xxx |\n" +
				"|     |     |     |     |     |     |     |     |  x  |  x  |\n" +
				"|     |     |     |     |     |     |     |     |     |     |\n" +
				"-------------------------------------------------------------\n";
		ByteArrayInputStream in = new ByteArrayInputStream(input.getBytes());
		Main attempt = new Main(in);
		try {attempt.startGame();
		} catch (NoSuchElementException e) {

			assertEquals(attempt.board.toString(), expected);			
		}		
	}
}
